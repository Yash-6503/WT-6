//slip30.xml
<?xml version="1.0" encoding="UTF-8"?>
<Bookstore>
    <Category name="Yoga">
        <Book>
            <Book_Title>The Power of Now</Book_Title>
            <Book_Author>Eckhart Tolle</Book_Author>
            <Book_Price>15.99</Book_Price>
        </Book>
        <Book>
            <Book_Title>Light on Yoga</Book_Title>
            <Book_Author>B.K.S. Iyengar</Book_Author>
            <Book_Price>12.50</Book_Price>
        </Book>
    </Category>
    <Category name="Story">
        <Book>
            <Book_Title>The Alchemist</Book_Title>
            <Book_Author>Paulo Coelho</Book_Author>
            <Book_Price>10.99</Book_Price>
        </Book>
        <Book>
            <Book_Title>To Kill a Mockingbird</Book_Title>
            <Book_Author>Harper Lee</Book_Author>
            <Book_Price>9.99</Book_Price>
        </Book>
    </Category>
    <Category name="Technical">
        <Book>
            <Book_Title>Clean Code: A Handbook of Agile Software Craftsmanship</Book_Title>
            <Book_Author>Robert C. Martin</Book_Author>
            <Book_Price>20.50</Book_Price>
        </Book>
        <Book>
            <Book_Title>Introduction to Algorithms</Book_Title>
            <Book_Author>Thomas H. Cormen</Book_Author>
            <Book_Price>25.99</Book_Price>
        </Book>
    </Category>
</Bookstore>


//Da

import pandas as pd
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori, association_rules

# Step 1: Create the dataset
transactions = [['eggs', 'milk', 'bread'],
                ['eggs', 'apple'],
                ['milk', 'bread'],
                ['apple', 'milk'],
                ['milk', 'apple', 'bread']]

# Step 2: Convert categorical values into numeric format
te = TransactionEncoder()
te_ary = te.fit(transactions).transform(transactions)
df = pd.DataFrame(te_ary, columns=te.columns_)

# Step 3: Apply Apriori algorithm to generate frequent itemsets
frequent_itemsets = apriori(df, min_support=0.5, use_colnames=True)

# Step 4: Generate association rules
rules = association_rules(frequent_itemsets, metric="lift", min_threshold=1)

# Step 5: Display the frequent itemsets and association rules
print("Frequent Itemsets:")
print(frequent_itemsets)
print("\nAssociation Rules:")
print(rules)
