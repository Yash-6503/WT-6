<!-- slip14.html -->

<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Teacher Details</title>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <!-- <script src="script.js"></script> -->
        
        <script>
            $(document).ready(function () {
                // Populate select box with teachers' names
                $.ajax({
                    url: "get_teachers.php",
                    type: "GET",
                    success: function (response) {
                        $("#teacherSelect").html(response);
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                    }
                });

                // Get details button click event
                $("#getDetailsBtn").click(function () {
                    var selectedTeacher = $("#teacherSelect").val();
                    if (selectedTeacher !== "") {
                        $.ajax({
                            url: "get_teacher_details.php",
                            type: "POST",
                            data: { selectedTeacher: selectedTeacher },
                            success: function (response) {
                                $("#teacherDetails").html(response);
                            },
                            error: function (xhr, status, error) {
                                console.error(xhr.responseText);
                            }
                        });
                    } else {
                        $("#teacherDetails").html("Please select a teacher first.");
                    }
                });
            });

        </script>
    </head>

    <body>
        <h2>Teacher Details</h2>
        <select id="teacherSelect">
            <option value="">Select a teacher</option>
            <!-- Options will be dynamically populated via AJAX -->
        </select>
        <button id="getDetailsBtn">Get Details</button>
        <div id="teacherDetails"></div>
    </body>

</html>

//get_teachers.php

<?php
// Assuming you have a database connection established already
// Replace database credentials as per your setup
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "school_database";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$sql = "SELECT tname FROM teacher";
$result = $conn->query($sql);

$options = "<option value=''>Select a teacher</option>";
if ($result->num_rows > 0) {
    while($row = $result->fetch_assoc()) {
        $options .= "<option value='" . $row['tname'] . "'>" . $row['tname'] . "</option>";
    }
}

echo $options;

$conn->close();
?>


//get_teacher_details.php
<?php
// Assuming you have a database connection established already
// Replace database credentials as per your setup
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "school_database";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

$selectedTeacher = $_POST['selectedTeacher'];

$sql = "SELECT * FROM teacher WHERE tname = '$selectedTeacher'";
$result = $conn->query($sql);

if ($result->num_rows > 0) {
    $row = $result->fetch_assoc();
    echo "Teacher No: " . $row['tno'] . "<br>";
    echo "Name: " . $row['tname'] . "<br>";
    echo "Qualification: " . $row['qualification'] . "<br>";
    echo "Salary: " . $row['salary'] . "<br>";
} else {
    echo "Teacher details not found.";
}

$conn->close();
?>


//DA
#slip14
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori

#Createthedataset
TID={1:['apple','mango','banana'],
2:['mango','banana','cabbage','carrots'],
3:['mango','banana','carrots'],
4:['mango','carrots']}

#Convertthecategoricalvaluesintonumericformat
Te=TransactionEncoder()
Te_ary=Te.fit([TID[i]for i in TID]).transform([TID[i]for i in TID])
Df=pd.DataFrame(Te_ary,columns=Te.columns_)

#Applytheapriorialgorithmwithdifferentmin_supvalues
Min_sup_values=[0.25,0.5,0.75]
for min_sup in Min_sup_values:
    Frequent_itemsets=apriori(Df, min_support = min_sup, use_colnames=True)
    print('Frequent_itemsets with min_sup=',min_sup)
    print(Frequent_itemsets)
    print('\n')