<!-- Slip9.html -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Validation</title>
</head>
<body>
    <form onsubmit="return validateForm()">
        Username: <input type="text" id="username" name="username"><br>
        Password: <input type="password" id="password" name="password"><br>
        <input type="submit" value="Submit">
    </form>


    <script>
        function validateForm() {
                // Get the username and password input values
                var username = document.getElementById('username').value;
                var password = document.getElementById('password').value;

                // Regular expression patterns for validation
                var usernamePattern = /^[a-zA-Z0-9_]{4,16}$/; // Alphanumeric and underscore, 4-16 characters
                var passwordPattern = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/; // At least one digit, one lowercase and one uppercase letter, 8 or more characters

                // Validate username
                if (!usernamePattern.test(username)) {
                    alert('Username must be alphanumeric and between 4 to 16 characters long.');
                    return false;
                }
                else{
                    alert("username matches all requirements.");
                }

                // Validate password
                if (!passwordPattern.test(password)) {
                    alert('Password must contain at least one digit, one lowercase and one uppercase letter, and be 8 or more characters long.');
                    return false;
                }
                else {
                    alert("password matches all requirements.");
                }

                // Validation passed
                return true;
            }

    </script>
</body>
</html>


//DA

'''Create your own transactions dataset and apply the above process on your dataset.'''

import pandas as pd
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori, association_rules

# Sample transactions dataset
transactions = [
    ["bread", "milk", "coffee"],
    ["bread", "butter", "jam"],
    ["milk", "tea", "sugar"],
    ["bread", "milk", "tea", "butter"],
    ["coffee", "sugar", "jam"]
]

# Convert transactions into DataFrame
df = pd.DataFrame(transactions)

# Display dataset information
print("Dataset Information:")
print(df.info())

# Preprocess the data
df.dropna(inplace=True)  # Drop null values
print("\nAfter dropping null values:")
print(df.info())

# Convert categorical values into numeric format
te = TransactionEncoder()
te_ary = te.fit(transactions).transform(transactions)
df_encoded = pd.DataFrame(te_ary, columns=te.columns_)

# Apply Apriori algorithm
frequent_itemsets = apriori(df_encoded, min_support=0.2, use_colnames=True)
association_rules_df = association_rules(frequent_itemsets, metric="lift", min_threshold=1)

# Display frequent itemsets and association rules
print("\nFrequent Itemsets:")
print(frequent_itemsets)

print("\nAssociation Rules:")
print(association_rules_df)
